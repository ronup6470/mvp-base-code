<?xml version="1.0" encoding="UTF-8" ?>
<!-- Indicates the begning of the component -->
<!-- name   : The name of the component class suffixed with Component. Its container will be named as CustomerContainerComponent. Its presentation class will be named as
              CustomerPresentationComponent and its selector will be <app-Customer-ui> and its presenter service will be named as CustomerPresenter.
     module : The module to which the component belongs to. If the module does not exist, the generator should create a module and its associated routing file
              , register the component in the declarations array and add its route in the routing file of the module. In case a new module is created, the
              generator should add the module in the lazy loaded routes of app.routing.module.            
     breadcrumbKey : The breadcrums label whose value will be fetched from the JSON file by using ngx-translate.         
 -->
<component name="Customer" module="Customer" breadcrumbKey="BREADCRUMB.Customer" xmlns:xi="http://www.w3.org/2001/XInclude">
    <!-- Referencing the shared model that will be used by .net as well as Angular Generator -->
    <xi:include href="./generator-config/Customer/shared/Customer-Model.xml" />
    <!-- Referencing the shared controller that will be used by .net and Angular generator -->
    <xi:include href="./generator-config/Customer/shared/Customer-Controller.xml" />
    <!-- Indicates that the form needs to be generated by using Customer as the Model class from the shared model -->
    <form model="Customer" controller="Customer">
        <!-- This will pick up each control from the <form> and place it in 2 column format -->
        <layout col="2">
            <!-- For a form control, read the label from the model.xml file where each property has an attribute called labelKey -->
            <!-- For a form control, read the validation and its messages from the model.xml file where each validation has an attribute labelKey  -->
            <!-- For a form control, read the placeholder from the model.xml file where each property has an attribute placeholderKey -->
            <input type="text" bind="firstName"></input>
            <input type="text" bind="company"></input>
            <input type="text" bind="group"></input>
            <input type="text" bind="email"></input>            
            <input type="date" bind="createdAt"></input>
            <input type="text" bind="productNo"></input>   
            <input type="file" bind="image"></input>
        </layout>
    </form>
    <!-- We will leverage controller.xml file inorder to generate service file -->
</component>