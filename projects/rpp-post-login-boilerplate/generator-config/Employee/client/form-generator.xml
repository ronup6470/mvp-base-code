<?xml version="1.0" encoding="UTF-8" ?>
<!-- Indicates the begning of the component -->
<!-- name   : The name of the component class suffixed with Component. Its container will be named as UserContainerComponent. Its presentation class will be named as
              UserPresentationComponent and its selector will be <app-user-ui> and its presenter service will be named as UserPresenter.
     module : The module to which the component belongs to. If the module does not exist, the generator should create a module and its associated routing file
              , register the component in the declarations array and add its route in the routing file of the module. In case a new module is created, the
              generator should add the module in the lazy loaded routes of app.routing.module.            
     breadcrumbKey : The breadcrums label whose value will be fetched from the JSON file by using ngx-translate.         
 -->
<component name="Employee" module="Employee" breadcrumbKey="BREADCRUMB.Employee" xmlns:xi="http://www.w3.org/2001/XInclude">
    <!-- Referencing the shared model that will be used by .net as well as Angular Generator -->
    <xi:include href="./generator-config/Employee/shared/Employee-Model.xml" />
    <!-- Referencing the shared controller that will be used by .net and Angular generator -->
    <xi:include href="./generator-config/Employee/shared/Employee-Controller.xml" />
    <!-- Indicates that the form needs to be generated by using User as the Model class from the shared model -->
    <form model="Employee" controller="Employee">
        <!-- This will pick up each control from the <form> and place it in 2 column format -->
        <layout col="2">
            <!-- For a form control, read the label from the model.xml file where each property has an attribute called labelKey -->
            <!-- For a form control, read the validation and its messages from the model.xml file where each validation has an attribute labelKey  -->
            <!-- For a form control, read the placeholder from the model.xml file where each property has an attribute placeholderKey -->
            <input type="text" bind="name"></input>
            <input type="text" bind="company"></input>
        </layout>
        <layout col="3">
            <!-- Will provide an empty list of items which will be populated by the user, it can be either through API or hardcoded -->
            <input type="dropdown" bind="city"></input>
            <input type="multiselect" bind="multiCity"></input>
            <!-- <input type="date" bind="createdAt"></input> -->
            <input type="datetime" bind="birthDate"></input>
            <input type="time" bind="orderTime"></input>
            <input type="text" bind="productNo"></input>
            <input type="text" bind="email"></input>
        </layout>
        <input type="file" bind="image"></input>
        
        <input type="textarea" bind="description"></input>
        <layout col="2">
            <!-- isAdmin should be a boolean in the shared model -->
            <input type="checkbox" bind="isAdmin"></input>
            <!-- ? Shouldn't it be an enum in the mode specifying the possible options -->
            <input type="radio" bind="gender"></input>
        </layout>
    </form>
</component>