<?xml version="1.0" encoding="UTF-8" ?>
<!-- Indicates the begning of the component -->
<!-- name   : The name of the component class suffixed with Component. Its container will be named as UserContainerComponent. Its presentation class will be named as
              UserPresentationComponent and its selector will be <app-user-ui> and its presenter service will be named as UserPresenter.
     module : The module to which the component belongs to. If the module does not exist, the generator should create a module and its associated routing file
              , register the component in the declarations array and add its route in the routing file of the module. In case a new module is created, the
              generator should add the module in the lazy loaded routes of app.routing.module.            
     breadcrumbKey : The breadcrums label whose value will be fetched from the JSON file by using ngx-translate.         
 -->
<component name="UserRegister" module="UserRegisterModule" breadcrumbKey="BREADCRUMB.UserRegister" xmlns:xi="http://www.w3.org/2001/XInclude">
    <!-- Referencing the shared model that will be used by .net as well as Angular Generator -->
    <xi:include href="./generator-config/UserRegister/shared/UserRegister-Model.xml" />
    <!-- Referencing the shared controller that will be used by .net and Angular generator -->
    <xi:include href="./generator-config/UserRegister/shared/UserRegister-Controller.xml" />
    <!-- Indicates that the form needs to be generated by using User as the Model class from the shared model -->
    <form model="UserRegister" controller="UserRegister">
        <!-- This will pick up each control from the <form> and place it in 2 column format -->
        <layout col="2">
            <input type="text" bind="firstName"></input>
            <input type="text" bind="lastName"></input>
        </layout>
        <layout col="2">
            <input type="text" bind="email"></input>
            <input type="text" bind="phoneNo"></input>
        </layout>
        <layout col="2">
            <!-- Will provide an empty list of items which will be populated by the user, it can be either through API or hardcoded -->
            <input type="text" bind="password"></input>
            <input type="text" bind="confirmPassword"></input>
        </layout>
        <layout col="1">
            <!-- Will provide an empty list of items which will be populated by the user, it can be either through API or hardcoded -->
            <input type="dropdown" bind="language"></input>
        </layout>
    </form>
</component>